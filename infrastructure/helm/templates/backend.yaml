apiVersion: v1
kind: Service
metadata:
  labels:
    service: tech-search-backend
  name: tech-search-backend
  namespace: {{ .Values.namespace.name }}
  annotations:
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.dns.backend }}
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: {{ .Values.acm.arn }}
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
spec:
  ports:
  - name: https
    port: 443
    targetPort: {{ .Values.port.backend }}
  selector:
    service: backend
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: tech-search-backend
    tags.datadoghq.com/env: {{ .Values.env }}
    tags.datadoghq.com/service: {{ .Values.service.name }}
    tags.datadoghq.com/version: {{ .Values.service.version }}
  name: tech-search-backend
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      service: backend
  template:
    metadata:
      labels:
        service: backend
        tags.datadoghq.com/env: {{ .Values.env }}
        tags.datadoghq.com/service: "tech-search"
        tags.datadoghq.com/version: "1.0"
    spec:
      containers:
      - image: frkoichi/tech-search-backend:latest
        name: tech-search-backend
        ports:
        - containerPort: {{ .Values.port.backend }}
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: tech-search-config-backend
        env:
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
      restartPolicy: Always